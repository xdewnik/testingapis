import org.apache.commons.lang3.StringUtils

fun main(): Unit {

    val expected =  "TableInfo{name='Product', columns={parameterIDS=Column{name='parameterIDS', type='TEXT', affinity='2', notNull=false, primaryKeyPosition=0, defaultValue='null'}, isSynced=Column{name='isSynced', type='INTEGER', affinity='3', notNull=true, primaryKeyPosition=0, defaultValue='0'}, caratWeight=Column{name='caratWeight', type='REAL', affinity='4', notNull=false, primaryKeyPosition=0, defaultValue='null'}, link=Column{name='link', type='TEXT', affinity='2', notNull=false, primaryKeyPosition=0, defaultValue='null'}, externalId=Column{name='externalId', type='INTEGER', affinity='3', notNull=false, primaryKeyPosition=0, defaultValue='null'}, description=Column{name='description', type='TEXT', affinity='2', notNull=false, primaryKeyPosition=0, defaultValue='null'}, discount=Column{name='discount', type='REAL', affinity='4', notNull=false, primaryKeyPosition=0, defaultValue='null'}, title=Column{name='title', type='TEXT', affinity='2', notNull=true, primaryKeyPosition=0, defaultValue='null'}, isHidden=Column{name='isHidden', type='INTEGER', affinity='3', notNull=true, primaryKeyPosition=0, defaultValue='null'}, linkGenerated=Column{name='linkGenerated', type='INTEGER', affinity='3', notNull=true, primaryKeyPosition=0, defaultValue='null'}, price=Column{name='price', type='REAL', affinity='4', notNull=false, primaryKeyPosition=0, defaultValue='null'}, attributes=Column{name='attributes', type='TEXT', affinity='2', notNull=false, primaryKeyPosition=0, defaultValue='null'}, id=Column{name='id', type='INTEGER', affinity='3', notNull=true, primaryKeyPosition=1, defaultValue='null'}, category=Column{name='category', type='TEXT', affinity='2', notNull=false, primaryKeyPosition=0, defaultValue='null'}, subcategory=Column{name='subcategory', type='TEXT', affinity='2', notNull=false, primaryKeyPosition=0, defaultValue='null'}, detailedTitle=Column{name='detailedTitle', type='TEXT', affinity='2', notNull=false, primaryKeyPosition=0, defaultValue='null'}}, foreignKeys=[], indices=[]}"
    val found =     "TableInfo{name='Product', columns={parameterIDS=Column{name='parameterIDS', type='TEXT', affinity='2', notNull=false, primaryKeyPosition=0, defaultValue='null'}, isSynced=Column{name='isSynced', type='INTEGER', affinity='3', notNull=true, primaryKeyPosition=0, defaultValue='1'}, productId=Column{name='productId', type='INTEGER', affinity='3', notNull=true, primaryKeyPosition=1, defaultValue='null'}, caratWeight=Column{name='caratWeight', type='REAL', affinity='4', notNull=false, primaryKeyPosition=0, defaultValue='null'}, link=Column{name='link', type='TEXT', affinity='2', notNull=false, primaryKeyPosition=0, defaultValue='null'}, externalId=Column{name='externalId', type='INTEGER', affinity='3', notNull=false, primaryKeyPosition=0, defaultValue='null'}, description=Column{name='description', type='TEXT', affinity='2', notNull=false, primaryKeyPosition=0, defaultValue='null'}, discount=Column{name='discount', type='REAL', affinity='4', notNull=false, primaryKeyPosition=0, defaultValue='null'}, title=Column{name='title', type='TEXT', affinity='2', notNull=true, primaryKeyPosition=0, defaultValue='null'}, isHidden=Column{name='isHidden', type='INTEGER', affinity='3', notNull=true, primaryKeyPosition=0, defaultValue='null'}, price=Column{name='price', type='REAL', affinity='4', notNull=false, primaryKeyPosition=0, defaultValue='null'}, isSelected=Column{name='isSelected', type='INTEGER', affinity='3', notNull=true, primaryKeyPosition=0, defaultValue='null'}, attributes=Column{name='attributes', type='TEXT', affinity='2', notNull=false, primaryKeyPosition=0, defaultValue='null'}, category=Column{name='category', type='TEXT', affinity='2', notNull=false, primaryKeyPosition=0, defaultValue='null'}, subcategory=Column{name='subcategory', type='TEXT', affinity='2', notNull=false, primaryKeyPosition=0, defaultValue='null'}, detailedTitle=Column{name='detailedTitle', type='TEXT', affinity='2', notNull=false, primaryKeyPosition=0, defaultValue='null'}}, foreignKeys=[], indices=[]}"
    print(expected == found)
    print(StringUtils.difference(expected, found))
}